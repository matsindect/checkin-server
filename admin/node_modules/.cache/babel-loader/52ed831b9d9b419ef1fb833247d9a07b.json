{"remainingRequest":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\babel-loader\\lib\\index.js!c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\xampp\\htdocs\\wida-me-deploy\\admin\\src\\views\\taxonomies\\AddKeyProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\src\\views\\taxonomies\\AddKeyProject.vue","mtime":1572145136001},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"c:\\\\xampp\\\\htdocs\\\\wida-me-deploy\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"c:\\\\xampp\\\\htdocs\\\\wida-me-deploy\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from 'vuex';\nimport jsonToFormData from 'json-form-data';\nexport default {\n  name: 'breadcrumbs',\n  props: {\n    caption: {\n      type: String,\n      default: 'Project Types'\n    },\n    hover: {\n      type: Boolean,\n      default: true\n    },\n    striped: {\n      type: Boolean,\n      default: true\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      fields: [{\n        key: '_id'\n      }, {\n        key: 'label'\n      }, {\n        key: 'status'\n      }],\n      currentPage: 1,\n      perPage: 5,\n      totalRows: 0,\n      show: true,\n      label: '',\n      icon: ''\n    };\n  },\n  methods: _objectSpread({}, mapMutations(['ADD_KEYPROJECTS']), {\n    IMAGE_PROCESS: function IMAGE_PROCESS(image) {\n      var extension = image.type.split('/')[1];\n      var icon = new File([image], \"\".concat(Date.now(), \".\").concat(extension), {\n        type: image.type\n      });\n      return icon;\n    },\n    submit: function submit() {\n      var formData = {\n        label: this.label,\n        icon: this.icon ? this.IMAGE_PROCESS(this.icon) : null\n      };\n      var options = {\n        showLeafArrayIndexes: true,\n        includeNullValues: false,\n        mapping: function mapping(value) {\n          if (typeof value === 'boolean') {\n            return +value ? '1' : '0';\n          }\n\n          return value;\n        }\n      };\n      var config = {\n        headers: {\n          'Content-Type': \"multipart/form-data; boundary=\".concat(formData._boundary)\n        }\n      };\n      var data = jsonToFormData(formData, options);\n      this.$store.dispatch('SAVE_KEYPROJECTS', {\n        data: data,\n        config: config\n      });\n    },\n    handleFileUpload: function handleFileUpload() {\n      this.icon = this.$refs.file.files[0];\n    },\n    getBadge: function getBadge(status) {\n      return status === 'Active' ? 'true' : status === 'Inactive' ? 'false' : status === 'Pending' ? 'warning' : status === 'Banned' ? 'danger' : 'primary';\n    },\n    getRowCount: function getRowCount(items) {\n      return items.length;\n    },\n    userLink: function userLink(_id) {\n      return \"addkeyprojects/\".concat(_id.toString());\n    },\n    rowClicked: function rowClicked(item) {\n      var userLink = this.userLink(item._id);\n      this.$router.push({\n        path: userLink\n      });\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.$store.dispatch('GET_KEYPROJECTS');\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  computed: _objectSpread({}, mapState({\n    keyprojects: function keyprojects(state) {\n      return state.keyprojects;\n    }\n  }), {\n    items: function items() {\n      return this.$store.state.keyProjects.keyprojects;\n    }\n  })\n};",{"version":3,"sources":["AddKeyProject.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"animated fadeIn\">\r\n      <b-row>\r\n        <b-col cols=\"12\">\r\n          <b-card\r\n            header-tag=\"header\"\r\n            footer-tag=\"footer\">\r\n            <div slot=\"header\">\r\n              <i class=\"fa fa-align-justify\"></i><strong> Add New Key Project</strong>\r\n              <div class=\"card-header-actions\">\r\n                <!--Action to toggle will come here -->\r\n              </div>\r\n            </div>\r\n            <b-row>\r\n              <b-col sm=\"6\">\r\n                <b-card>\r\n                  <div slot=\"header\">\r\n                    <strong>Key Project Details</strong>\r\n                  </div>\r\n                  <b-form-group>\r\n                    <label for=\"label\">Name</label>\r\n                    <b-form-input type=\"text\" id=\"label\" placeholder=\"Enter taxonomy name\" v-model=\"label\" name=\"label\"></b-form-input>\r\n                  </b-form-group>\r\n                  <b-form-group>\r\n                    <label for=\"vat\">Slug</label>\r\n                    <b-form-input type=\"text\" id=\"slug\" placeholder=\"slug\" ></b-form-input>\r\n                  </b-form-group>\r\n                  <b-form-group>\r\n                    <input type=\"file\"  name=\"icon\" id=\"icon\"  ref=\"file\" accept=\"image/*\" v-on:change=\"handleFileUpload()\"  />\r\n                  </b-form-group>\r\n                  <div class=\"form-actions\">\r\n                    <b-button type=\"submit\" variant=\"primary\" v-on:click=\"submit()\">Add New Key Project</b-button>\r\n                  </div>\r\n\r\n                  \r\n                </b-card>\r\n              </b-col>\r\n              \r\n              <b-col sm=\"6\">\r\n                \r\n                  <transition name=\"slide\">\r\n                  <b-card>\r\n                    <div slot=\"header\" v-html=\"caption\"></div>\r\n                      <b-table :hover=\"hover\" :striped=\"striped\" :bordered=\"bordered\" :small=\"small\" :fixed=\"fixed\" responsive=\"sm\" :items=\"items\" :fields=\"fields\" :current-page=\"currentPage\" :per-page=\"perPage\" @row-clicked=\"rowClicked\">\r\n                      <template slot=\"id\" slot-scope=\"data\">\r\n                        <strong>{{data.item._id}}</strong>\r\n                      </template>\r\n                      <template slot=\"name\" slot-scope=\"data\">\r\n                        <strong>{{data.item.label}}</strong>\r\n                      </template>\r\n                      <template slot=\"status\" slot-scope=\"data\">\r\n                        <b-badge :variant=\"getBadge(data.item.status)\">{{data.item.status}}</b-badge>\r\n                      </template>\r\n                    </b-table>\r\n                    <nav>\r\n                      <b-pagination size=\"sm\" :total-rows=\"getRowCount(items)\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\r\n                    </nav>\r\n                  </b-card>\r\n                  </transition>\r\n              </b-col>\r\n            </b-row>\r\n          </b-card>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations } from 'vuex';\r\nimport jsonToFormData from 'json-form-data';\r\nexport default {\r\n  name: 'breadcrumbs',\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Project Types'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      fields: [{ key: '_id' }, { key: 'label' }, { key: 'status' }],\r\n      currentPage: 1,\r\n      perPage: 5,\r\n      totalRows: 0,\r\n      show: true,\r\n      label: '',\r\n      icon: ''\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapMutations(['ADD_KEYPROJECTS']),\r\n    IMAGE_PROCESS(image) {\r\n      const extension = image.type.split('/')[1];\r\n      const icon = new File([image], `${Date.now()}.${extension}`, {\r\n        type: image.type\r\n      });\r\n      return icon;\r\n    },\r\n    submit() {\r\n      let formData = {\r\n        label: this.label,\r\n        icon: this.icon ? this.IMAGE_PROCESS(this.icon) : null\r\n      };\r\n\r\n      var options = {\r\n        showLeafArrayIndexes: true,\r\n        includeNullValues: false,\r\n        mapping: function(value) {\r\n          if (typeof value === 'boolean') {\r\n            return +value ? '1' : '0';\r\n          }\r\n          return value;\r\n        }\r\n      };\r\n      let config = {\r\n        headers: {\r\n          'Content-Type': `multipart/form-data; boundary=${formData._boundary}`\r\n        }\r\n      };\r\n      let data = jsonToFormData(formData, options);\r\n      this.$store.dispatch('SAVE_KEYPROJECTS', {\r\n        data: data,\r\n        config\r\n      });\r\n    },\r\n    handleFileUpload() {\r\n      this.icon = this.$refs.file.files[0];\r\n    },\r\n    getBadge(status) {\r\n      return status === 'Active'\r\n        ? 'true'\r\n        : status === 'Inactive'\r\n          ? 'false'\r\n          : status === 'Pending'\r\n            ? 'warning'\r\n            : status === 'Banned' ? 'danger' : 'primary';\r\n    },\r\n    getRowCount(items) {\r\n      return items.length;\r\n    },\r\n    userLink(_id) {\r\n      return `addkeyprojects/${_id.toString()}`;\r\n    },\r\n    rowClicked(item) {\r\n      const userLink = this.userLink(item._id);\r\n      this.$router.push({ path: userLink });\r\n    }\r\n  },\r\n  async created() {\r\n    this.$store.dispatch('GET_KEYPROJECTS');\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      keyprojects: state => state.keyprojects\r\n    }),\r\n    items() {\r\n      return this.$store.state.keyProjects.keyprojects;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.btn.disabled {\r\n  cursor: auto;\r\n}\r\n.fade-enter-active {\r\n  transition: all 0.3s ease;\r\n}\r\n.fade-leave-active {\r\n  transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  transform: translateX(10px);\r\n  opacity: 0;\r\n}\r\n</style>"],"sourceRoot":"src/views/taxonomies"}]}