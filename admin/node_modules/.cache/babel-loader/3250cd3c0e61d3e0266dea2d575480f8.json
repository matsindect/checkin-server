{"remainingRequest":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\babel-loader\\lib\\index.js!c:\\xampp\\htdocs\\wida-me-deploy\\admin\\src\\store\\modules\\specifierTypes.js","dependencies":[{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\src\\store\\modules\\specifierTypes.js","mtime":1572171602386},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"c:\\\\xampp\\\\htdocs\\\\wida-me-deploy\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport Vue from 'vue';\nimport Axios from 'axios';\nvar state = {\n  specifiertype: [],\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  },\n  formHeader: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nvar getters = {\n  specifiertype: function specifiertype(state) {\n    return state.specifiertype;\n  },\n  findSpecifierType: function findSpecifierType(state) {\n    return function (id) {\n      return state.specifiertype.find(function (s) {\n        return s._id == id;\n      });\n    };\n  }\n};\nvar mutations = {\n  SET_SPECIFIERTYPE: function SET_SPECIFIERTYPE(state, payload) {\n    state.specifiertype = payload;\n  },\n  ADD_SPECIFIERTYPE: function ADD_SPECIFIERTYPE(state, payload) {\n    state.specifiertype.push(payload);\n  },\n  EDIT_SPECIFIERTYPE: function EDIT_SPECIFIERTYPE(state, specifiertype) {\n    var index = state.specifiertype.findIndex(function (s) {\n      return s._id == specifiertype._id;\n    });\n    Vue.set(state.specifiertype, index, specifiertype);\n  }\n};\nvar actions = {\n  GET_SPECIFIERTYPE: function () {\n    var _GET_SPECIFIERTYPE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(context) {\n      var specifiertype;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get('http://localhost:8086/api/v1/taxonomy/specifier-types/', state.headers);\n\n            case 2:\n              specifiertype = _context.sent;\n              context.commit('SET_SPECIFIERTYPE', specifiertype.data.data.doc);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_SPECIFIERTYPE(_x) {\n      return _GET_SPECIFIERTYPE.apply(this, arguments);\n    }\n\n    return GET_SPECIFIERTYPE;\n  }(),\n  SAVE_SPECIFIERTYPE: function () {\n    var _SAVE_SPECIFIERTYPE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(context, payload) {\n      var data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Axios.post('http://localhost:8086/api/v1/taxonomy/specifier-types/', payload.data, {\n                headers: payload.config\n              });\n\n            case 2:\n              data = _context2.sent;\n              //   console.log(data.data.data.doc);\n              context.commit('ADD_SPECIFIERTYPE', data.data.data.doc);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function SAVE_SPECIFIERTYPE(_x2, _x3) {\n      return _SAVE_SPECIFIERTYPE.apply(this, arguments);\n    }\n\n    return SAVE_SPECIFIERTYPE;\n  }(),\n  UPDATE_SPECIFIERTYPE: function () {\n    var _UPDATE_SPECIFIERTYPE = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(context, _ref) {\n      var id, payload, config, data;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = _ref.id, payload = _ref.payload, config = _ref.config;\n              _context3.next = 3;\n              return Axios.patch(\"http://localhost:8086/api/v1/taxonomy/specifier-types/\".concat(id), payload, {\n                header: config.headers\n              });\n\n            case 3:\n              data = _context3.sent;\n              context.commit('EDIT_SPECIFIERTYPE', data.data.data.doc);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function UPDATE_SPECIFIERTYPE(_x4, _x5) {\n      return _UPDATE_SPECIFIERTYPE.apply(this, arguments);\n    }\n\n    return UPDATE_SPECIFIERTYPE;\n  }()\n}; // \"express\": \"^4.17.1\",\n\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["c:\\xampp\\htdocs\\wida-me-deploy\\admin\\src\\store\\modules\\specifierTypes.js"],"names":["Vue","Axios","state","specifiertype","headers","formHeader","getters","findSpecifierType","id","find","s","_id","mutations","SET_SPECIFIERTYPE","payload","ADD_SPECIFIERTYPE","push","EDIT_SPECIFIERTYPE","index","findIndex","set","actions","GET_SPECIFIERTYPE","context","get","commit","data","doc","SAVE_SPECIFIERTYPE","post","config","UPDATE_SPECIFIERTYPE","patch","header"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport Axios from 'axios';\r\n\r\nconst state = {\r\n  specifiertype: [],\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*'\r\n  },\r\n  formHeader: {\r\n    'Content-Type': 'multipart/form-data'\r\n  }\r\n};\r\nconst getters = {\r\n  specifiertype: state => {\r\n    return state.specifiertype;\r\n  },\r\n  findSpecifierType: state => id => state.specifiertype.find(s => s._id == id)\r\n};\r\nconst mutations = {\r\n  SET_SPECIFIERTYPE: (state, payload) => {\r\n    state.specifiertype = payload;\r\n  },\r\n  ADD_SPECIFIERTYPE: (state, payload) => {\r\n    state.specifiertype.push(payload);\r\n  },\r\n  EDIT_SPECIFIERTYPE: (state, specifiertype) => {\r\n    const index = state.specifiertype.findIndex(\r\n      s => s._id == specifiertype._id\r\n    );\r\n    Vue.set(state.specifiertype, index, specifiertype);\r\n  }\r\n};\r\nconst actions = {\r\n  GET_SPECIFIERTYPE: async context => {\r\n    let specifiertype = await Axios.get(\r\n      'http://localhost:8086/api/v1/taxonomy/specifier-types/',\r\n      state.headers\r\n    );\r\n    context.commit('SET_SPECIFIERTYPE', specifiertype.data.data.doc);\r\n  },\r\n  SAVE_SPECIFIERTYPE: async (context, payload) => {\r\n    let data = await Axios.post(\r\n      'http://localhost:8086/api/v1/taxonomy/specifier-types/',\r\n      payload.data,\r\n      { headers: payload.config }\r\n    );\r\n    //   console.log(data.data.data.doc);\r\n    context.commit('ADD_SPECIFIERTYPE', data.data.data.doc);\r\n  },\r\n\r\n  UPDATE_SPECIFIERTYPE: async (context, { id, payload, config }) => {\r\n    let data = await Axios.patch(\r\n      `http://localhost:8086/api/v1/taxonomy/specifier-types/${id}`,\r\n      payload,\r\n      { header: config.headers }\r\n    );\r\n\r\n    context.commit('EDIT_SPECIFIERTYPE', data.data.data.doc);\r\n  }\r\n};\r\n// \"express\": \"^4.17.1\",\r\nexport default {\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n};\r\n"]}]}