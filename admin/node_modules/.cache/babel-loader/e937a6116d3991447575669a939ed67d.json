{"remainingRequest":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\babel-loader\\lib\\index.js!c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\xampp\\htdocs\\wida-me-deploy\\admin\\src\\views\\taxonomies\\AllProjectTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\src\\views\\taxonomies\\AllProjectTypes.vue","mtime":1571832219846},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\wida-me-deploy\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"c:\\\\xampp\\\\htdocs\\\\wida-me-deploy\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"c:\\\\xampp\\\\htdocs\\\\wida-me-deploy\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport jsonToFormData from 'json-form-data';\nexport default {\n  name: 'breadcrumbs',\n  props: {\n    caption: {\n      type: String,\n      default: 'Project Types'\n    },\n    hover: {\n      type: Boolean,\n      default: true\n    },\n    striped: {\n      type: Boolean,\n      default: true\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      items: function items(_id) {\n        var projecttype = _this.$store.state.projectType.projecttype.find(function (projecttypes) {\n          return projecttypes._id.toString() === _id;\n        });\n\n        var Projecttypes = projecttype ? Object.entries(projecttype) : [['id', 'Not found']];\n        return Projecttypes.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          return {\n            key: key,\n            value: value\n          };\n        });\n      },\n      fields: [{\n        key: 'key'\n      }, {\n        key: 'value'\n      }],\n      label: '',\n      icon: '',\n      slug: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['findProjectType'])),\n  methods: {\n    goBack: function goBack() {\n      this.$router.go(-1); // this.$router.replace({path: '/users'})\n    },\n    IMAGE_PROCESS: function IMAGE_PROCESS(image) {\n      var extension = image.type.split('/')[1];\n      var icon = new File([image], \"\".concat(Date.now(), \".\").concat(extension), {\n        type: image.type\n      });\n      return icon;\n    },\n    submit: function submit() {\n      var projecttype = this.findProjectType(this.$route.params.id);\n      var CatId = projecttype._id;\n      var formData = {\n        label: this.label || projecttype.label,\n        slug: this.slug || projecttype.slug,\n        icon: this.icon ? this.IMAGE_PROCESS(this.icon) : projecttype.icon\n      };\n      var options = {\n        showLeafArrayIndexes: true,\n        includeNullValues: false,\n        mapping: function mapping(value) {\n          if (typeof value === 'boolean') {\n            return +value ? '1' : '0';\n          }\n\n          return value;\n        }\n      };\n      var headers = {\n        'Content-Type': \"multipart/form-data; boundary=\".concat(formData._boundary)\n      };\n      var data = jsonToFormData(formData, options);\n      this.$store.dispatch('UPDATE_PROJECTTYPE', {\n        id: CatId,\n        payload: data,\n        config: headers\n      });\n    },\n    handleFileUpload: function handleFileUpload() {\n      this.icon = this.$refs.file.files[0];\n    },\n    updatelabel: function updatelabel(e) {\n      this.label = e;\n    },\n    updateslug: function updateslug(e) {\n      this.slug = e;\n    }\n  }\n};",{"version":3,"sources":["AllProjectTypes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"animated fadeIn\">\r\n      <b-row>\r\n        <b-col cols=\"12\">\r\n          <b-card\r\n            header-tag=\"header\"\r\n            footer-tag=\"footer\">\r\n            <div slot=\"header\">\r\n              <i class=\"fa fa-align-justify\"></i><strong> Edit Project Type</strong>\r\n              <div class=\"card-header-actions\">\r\n                <!--Action to toggle will come here -->\r\n              </div>\r\n            </div>\r\n            <b-row>\r\n              <b-col sm=\"6\">\r\n                <b-card>\r\n                  <div slot=\"header\">\r\n                    <strong>Project Type Details</strong>\r\n                  </div>\r\n                  <b-form-group>\r\n                    <label for=\"label\">Name</label>\r\n                    <b-form-input type=\"text\" id=\"label\" placeholder=\"Enter taxonomy name\" @input=\"updatelabel\" :value=\"findProjectType($route.params.id).label\" name=\"label\"></b-form-input>\r\n                  </b-form-group>\r\n                  <b-form-group>\r\n                    <label for=\"vat\">Slug</label>\r\n                    <b-form-input type=\"text\" id=\"slug\" placeholder=\"slug\" @input=\"updateslug\" :value=\"findProjectType($route.params.id).slug\"></b-form-input>\r\n                  </b-form-group>\r\n                  <b-form-group>\r\n                    <input type=\"file\"  name=\"icon\" id=\"icon\"  ref=\"file\" accept=\"image/*\" v-on:change=\"handleFileUpload()\"  />\r\n                  </b-form-group>\r\n                  <div class=\"form-actions\">\r\n                    <b-button type=\"submit\" variant=\"primary\" v-on:click=\"submit()\">Update changes</b-button>\r\n                  </div>\r\n\r\n                  \r\n                </b-card>\r\n              </b-col>\r\n              \r\n              <b-col sm=\"6\">\r\n                \r\n                    <b-card no-header>\r\n                      <template slot=\"header\">\r\n                        Project id:  {{ $route.params.id }}\r\n                      </template>\r\n                      <b-table striped small fixed responsive=\"sm\" :items=\"items($route.params.id)\" :fields=\"fields\">\r\n                        <template slot=\"value\" slot-scope=\"data\">\r\n                          <strong>{{data.item.value}}</strong>\r\n                        </template>\r\n                      </b-table>\r\n                      <template slot=\"footer\">\r\n                        <b-button @click=\"goBack\">Back</b-button>\r\n                      </template>\r\n                    </b-card>\r\n                  </b-col>\r\n            </b-row>\r\n          </b-card>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport jsonToFormData from 'json-form-data';\r\nexport default {\r\n  name: 'breadcrumbs',\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Project Types'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      items: _id => {\r\n        const projecttype = this.$store.state.projectType.projecttype.find(\r\n          projecttypes => projecttypes._id.toString() === _id\r\n        );\r\n        const Projecttypes = projecttype\r\n          ? Object.entries(projecttype)\r\n          : [['id', 'Not found']];\r\n        return Projecttypes.map(([key, value]) => {\r\n          return { key: key, value: value };\r\n        });\r\n      },\r\n      fields: [{ key: 'key' }, { key: 'value' }],\r\n      label: '',\r\n      icon: '',\r\n      slug: ''\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['findProjectType'])\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      this.$router.go(-1);\r\n      // this.$router.replace({path: '/users'})\r\n    },\r\n    IMAGE_PROCESS(image) {\r\n      const extension = image.type.split('/')[1];\r\n      const icon = new File([image], `${Date.now()}.${extension}`, {\r\n        type: image.type\r\n      });\r\n      return icon;\r\n    },\r\n    submit() {\r\n      const projecttype = this.findProjectType(this.$route.params.id);\r\n      const CatId = projecttype._id;\r\n      let formData = {\r\n        label: this.label || projecttype.label,\r\n        slug: this.slug || projecttype.slug,\r\n        icon: this.icon ? this.IMAGE_PROCESS(this.icon) : projecttype.icon\r\n      };\r\n\r\n      var options = {\r\n        showLeafArrayIndexes: true,\r\n        includeNullValues: false,\r\n        mapping: function(value) {\r\n          if (typeof value === 'boolean') {\r\n            return +value ? '1' : '0';\r\n          }\r\n          return value;\r\n        }\r\n      };\r\n      let headers = {\r\n        'Content-Type': `multipart/form-data; boundary=${formData._boundary}`\r\n      };\r\n      let data = jsonToFormData(formData, options);\r\n      this.$store.dispatch('UPDATE_PROJECTTYPE', {\r\n        id: CatId,\r\n        payload: data,\r\n        config: headers\r\n      });\r\n    },\r\n    handleFileUpload() {\r\n      this.icon = this.$refs.file.files[0];\r\n    },\r\n    updatelabel(e) {\r\n      this.label = e;\r\n    },\r\n    updateslug(e) {\r\n      this.slug = e;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.btn.disabled {\r\n  cursor: auto;\r\n}\r\n.fade-enter-active {\r\n  transition: all 0.3s ease;\r\n}\r\n.fade-leave-active {\r\n  transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  transform: translateX(10px);\r\n  opacity: 0;\r\n}\r\n</style>"],"sourceRoot":"src/views/taxonomies"}]}