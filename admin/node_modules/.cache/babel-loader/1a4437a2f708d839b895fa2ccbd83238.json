{"remainingRequest":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\wida-me\\server\\admin\\src\\store\\modules\\categories.js","dependencies":[{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\src\\store\\modules\\categories.js","mtime":1572171471221},{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wida-me\\\\server\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport Vue from 'vue';\nimport Axios from 'axios';\nvar state = {\n  categories: [],\n  file: '',\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  },\n  formHeader: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nvar getters = {\n  file: function file(state) {\n    return state.file;\n  },\n  categories: function categories(state) {\n    return state.categories;\n  },\n  findCategory: function findCategory(state) {\n    return function (id) {\n      return state.categories.find(function (s) {\n        return s._id == id;\n      });\n    };\n  },\n  isLoaded: function isLoaded(state) {\n    return !!state.categories.length;\n  }\n};\nvar mutations = {\n  SET_CATEGORIES: function SET_CATEGORIES(state, payload) {\n    state.categories = payload;\n  },\n  ADD_CATEGORIES: function ADD_CATEGORIES(state, payload) {\n    state.categories.push(payload);\n  },\n  EDIT_CATEGORIES: function EDIT_CATEGORIES(state, categories) {\n    var index = state.categories.findIndex(function (s) {\n      return s._id == categories._id;\n    });\n    Vue.set(state.categories, index, categories);\n  }\n};\nvar actions = {\n  GET_CATEGORIES: function () {\n    var _GET_CATEGORIES = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(context) {\n      var categories;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get('http://localhost:8086/api/v1/taxonomy/categories/', state.headers);\n\n            case 2:\n              categories = _context.sent;\n              context.commit('SET_CATEGORIES', categories.data.data.doc);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GET_CATEGORIES(_x) {\n      return _GET_CATEGORIES.apply(this, arguments);\n    }\n\n    return GET_CATEGORIES;\n  }(),\n  SAVE_CATEGORIES: function () {\n    var _SAVE_CATEGORIES = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(context, payload) {\n      var data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Axios.post('http://localhost:8086/api/v1/taxonomy/categories/', payload.data, {\n                headers: payload.config\n              });\n\n            case 2:\n              data = _context2.sent;\n              // console.log(data.data.data.doc);\n              context.commit('ADD_CATEGORIES', data.data.data.doc);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function SAVE_CATEGORIES(_x2, _x3) {\n      return _SAVE_CATEGORIES.apply(this, arguments);\n    }\n\n    return SAVE_CATEGORIES;\n  }(),\n  UPDATE_CATEGORIES: function () {\n    var _UPDATE_CATEGORIES = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(context, _ref) {\n      var id, payload, config, data;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = _ref.id, payload = _ref.payload, config = _ref.config;\n              _context3.next = 3;\n              return Axios.patch(\"http://localhost:8086/api/v1/taxonomy/categories/\".concat(id), payload, {\n                header: config.headers\n              });\n\n            case 3:\n              data = _context3.sent;\n              context.commit('EDIT_CATEGORIES', data.data.data.doc);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function UPDATE_CATEGORIES(_x4, _x5) {\n      return _UPDATE_CATEGORIES.apply(this, arguments);\n    }\n\n    return UPDATE_CATEGORIES;\n  }()\n}; // \"express\": \"^4.17.1\",\n\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:\\xampp\\htdocs\\wida-me\\server\\admin\\src\\store\\modules\\categories.js"],"names":["Vue","Axios","state","categories","file","headers","formHeader","getters","findCategory","id","find","s","_id","isLoaded","length","mutations","SET_CATEGORIES","payload","ADD_CATEGORIES","push","EDIT_CATEGORIES","index","findIndex","set","actions","GET_CATEGORIES","context","get","commit","data","doc","SAVE_CATEGORIES","post","config","UPDATE_CATEGORIES","patch","header"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport Axios from 'axios';\r\n\r\nconst state = {\r\n  categories: [],\r\n  file: '',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*'\r\n  },\r\n  formHeader: {\r\n    'Content-Type': 'multipart/form-data'\r\n  }\r\n};\r\nconst getters = {\r\n  file: state => {\r\n    return state.file;\r\n  },\r\n  categories: state => {\r\n    return state.categories;\r\n  },\r\n  findCategory: state => id => state.categories.find(s => s._id == id),\r\n  isLoaded: state => !!state.categories.length\r\n};\r\nconst mutations = {\r\n  SET_CATEGORIES: (state, payload) => {\r\n    state.categories = payload;\r\n  },\r\n  ADD_CATEGORIES: (state, payload) => {\r\n    state.categories.push(payload);\r\n  },\r\n  EDIT_CATEGORIES: (state, categories) => {\r\n    const index = state.categories.findIndex(s => s._id == categories._id);\r\n    Vue.set(state.categories, index, categories);\r\n  }\r\n};\r\nconst actions = {\r\n  GET_CATEGORIES: async context => {\r\n    let categories = await Axios.get(\r\n      'http://localhost:8086/api/v1/taxonomy/categories/',\r\n      state.headers\r\n    );\r\n    context.commit('SET_CATEGORIES', categories.data.data.doc);\r\n  },\r\n  SAVE_CATEGORIES: async (context, payload) => {\r\n    let data = await Axios.post(\r\n      'http://localhost:8086/api/v1/taxonomy/categories/',\r\n      payload.data,\r\n      { headers: payload.config }\r\n    );\r\n    // console.log(data.data.data.doc);\r\n    context.commit('ADD_CATEGORIES', data.data.data.doc);\r\n  },\r\n\r\n  UPDATE_CATEGORIES: async (context, { id, payload, config }) => {\r\n    let data = await Axios.patch(\r\n      `http://localhost:8086/api/v1/taxonomy/categories/${id}`,\r\n      payload,\r\n      { header: config.headers }\r\n    );\r\n\r\n    context.commit('EDIT_CATEGORIES', data.data.data.doc);\r\n  }\r\n};\r\n// \"express\": \"^4.17.1\",\r\nexport default {\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n};\r\n"]}]}