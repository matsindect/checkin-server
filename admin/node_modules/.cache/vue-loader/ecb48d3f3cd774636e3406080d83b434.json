{"remainingRequest":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\wida-me\\server\\admin\\src\\views\\taxonomies\\AddCategory.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\src\\views\\taxonomies\\AddCategory.vue","mtime":1571715758075},{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\wida-me\\server\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from 'vuex';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nexport default {\r\n  name: 'breadcrumbs',\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Categories'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      items: this.$store.state.categories.categories,\r\n      fields: [{ key: '_id' }, { key: 'label' }, { key: 'status' }],\r\n      currentPage: 1,\r\n      perPage: 5,\r\n      totalRows: 0,\r\n      show: true,\r\n      label: '',\r\n      icon: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      console.log(this.icon);\r\n      let formData = new FormData();\r\n      formData.append('label', this.label);\r\n      formData.append('icon', this.icon);\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: `http://localhost:8086/api/v1/taxonomy/categories/`,\r\n        data: qs.stringify(formData)\r\n      })\r\n        .then(function() {\r\n          console.log('SUCCESS!!');\r\n        })\r\n        .catch(function() {\r\n          console.log('FAILURE!!');\r\n        });\r\n    },\r\n    handleFileUpload() {\r\n      this.icon = this.$refs.file.files[0];\r\n    },\r\n    getBadge(status) {\r\n      return status === 'Active'\r\n        ? 'true'\r\n        : status === 'Inactive'\r\n          ? 'false'\r\n          : status === 'Pending'\r\n            ? 'warning'\r\n            : status === 'Banned' ? 'danger' : 'primary';\r\n    },\r\n    getRowCount(items) {\r\n      return items.length;\r\n    },\r\n    userLink(id) {\r\n      return `${id.toString()}`;\r\n    },\r\n    rowClicked(item) {\r\n      const userLink = this.userLink(item.id);\r\n      this.$router.push({ path: userLink });\r\n    }\r\n  },\r\n  computed: {\r\n    categories() {\r\n      return this.$store.state.categories.categories;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["AddCategory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddCategory.vue","sourceRoot":"src/views/taxonomies","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"animated fadeIn\">\r\n      <b-row>\r\n        <b-col cols=\"12\">\r\n          <b-card\r\n            header-tag=\"header\"\r\n            footer-tag=\"footer\">\r\n            <div slot=\"header\">\r\n              <i class=\"fa fa-align-justify\"></i><strong> Add New Project</strong>\r\n              <div class=\"card-header-actions\">\r\n                <!--Action to toggle will come here -->\r\n              </div>\r\n            </div>\r\n            <b-row>\r\n              <b-col sm=\"6\">\r\n                <b-card>\r\n                  <div slot=\"header\">\r\n                    <strong>Project Type Details</strong>\r\n                  </div>\r\n                  <b-form-group>\r\n                    <label for=\"label\">Name</label>\r\n                    <b-form-input type=\"text\" id=\"label\" placeholder=\"Enter taxonomy name\" v-model=\"label\" name=\"label\"></b-form-input>\r\n                  </b-form-group>\r\n                  <b-form-group>\r\n                    <label for=\"vat\">Slug</label>\r\n                    <b-form-input type=\"text\" id=\"slug\" placeholder=\"slug\" ></b-form-input>\r\n                  </b-form-group>\r\n                  <b-form-group>\r\n                    <!-- <div class=\"input-group mb-3\">\r\n                      <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\">Upload</span>\r\n                      </div>\r\n                      <div class=\"custom-file\"> -->\r\n                        <input type=\"file\"  name=\"icon\" id=\"icon\"  ref=\"file\" accept=\"image/*\" v-on:change=\"handleFileUpload()\"  />\r\n                        <!-- <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label> -->\r\n                      <!-- </div>\r\n                    </div> -->\r\n                    <!-- <label for=\"street\">icon</label> \r\n                    <b-form-file type=\"file\" id=\"icon\" placeholder=\"slug\" accept=\"image/*\" v-model=\"icon\" ref=\"file\" v-on:change=\"handleFileUpload($event)\" name=\"icon\"></b-form-file> -->\r\n                  </b-form-group>\r\n                  <div class=\"form-actions\">\r\n                    <b-button type=\"submit\" variant=\"primary\" v-on:click=\"submit()\">Save changes</b-button>\r\n                    <b-button type=\"button\" variant=\"secondary\">Cancel</b-button>\r\n                  </div>\r\n\r\n                  \r\n                </b-card>\r\n              </b-col>\r\n              \r\n              <b-col sm=\"6\">\r\n                \r\n                  <transition name=\"slide\">\r\n                  <b-card>\r\n                    <div slot=\"header\" v-html=\"caption\"></div>\r\n                      <b-table :hover=\"hover\" :striped=\"striped\" :bordered=\"bordered\" :small=\"small\" :fixed=\"fixed\" responsive=\"sm\" :items=\"items\" :fields=\"fields\" :current-page=\"currentPage\" :per-page=\"perPage\" @row-clicked=\"rowClicked\">\r\n                      <template slot=\"id\" slot-scope=\"data\">\r\n                        <strong>{{data.item._id}}</strong>\r\n                      </template>\r\n                      <template slot=\"name\" slot-scope=\"data\">\r\n                        <strong>{{data.item.label}}</strong>\r\n                      </template>\r\n                      <template slot=\"status\" slot-scope=\"data\">\r\n                        <b-badge :variant=\"getBadge(data.item.status)\">{{data.item.status}}</b-badge>\r\n                      </template>\r\n                    </b-table>\r\n                    <nav>\r\n                      <b-pagination size=\"sm\" :total-rows=\"getRowCount(items)\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\r\n                    </nav>\r\n                  </b-card>\r\n                  </transition>\r\n              </b-col>\r\n            </b-row>\r\n          </b-card>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nexport default {\r\n  name: 'breadcrumbs',\r\n  props: {\r\n    caption: {\r\n      type: String,\r\n      default: 'Categories'\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      items: this.$store.state.categories.categories,\r\n      fields: [{ key: '_id' }, { key: 'label' }, { key: 'status' }],\r\n      currentPage: 1,\r\n      perPage: 5,\r\n      totalRows: 0,\r\n      show: true,\r\n      label: '',\r\n      icon: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      console.log(this.icon);\r\n      let formData = new FormData();\r\n      formData.append('label', this.label);\r\n      formData.append('icon', this.icon);\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: `http://localhost:8086/api/v1/taxonomy/categories/`,\r\n        data: qs.stringify(formData)\r\n      })\r\n        .then(function() {\r\n          console.log('SUCCESS!!');\r\n        })\r\n        .catch(function() {\r\n          console.log('FAILURE!!');\r\n        });\r\n    },\r\n    handleFileUpload() {\r\n      this.icon = this.$refs.file.files[0];\r\n    },\r\n    getBadge(status) {\r\n      return status === 'Active'\r\n        ? 'true'\r\n        : status === 'Inactive'\r\n          ? 'false'\r\n          : status === 'Pending'\r\n            ? 'warning'\r\n            : status === 'Banned' ? 'danger' : 'primary';\r\n    },\r\n    getRowCount(items) {\r\n      return items.length;\r\n    },\r\n    userLink(id) {\r\n      return `${id.toString()}`;\r\n    },\r\n    rowClicked(item) {\r\n      const userLink = this.userLink(item.id);\r\n      this.$router.push({ path: userLink });\r\n    }\r\n  },\r\n  computed: {\r\n    categories() {\r\n      return this.$store.state.categories.categories;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.btn.disabled {\r\n  cursor: auto;\r\n}\r\n.fade-enter-active {\r\n  transition: all 0.3s ease;\r\n}\r\n.fade-leave-active {\r\n  transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  transform: translateX(10px);\r\n  opacity: 0;\r\n}\r\n</style>"]}]}